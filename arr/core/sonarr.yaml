services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:develop
    container_name: arr_sonarr
    hostname: sonarr

    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

    volumes:
      - ${DOCKER_DATA}/arr/sonarr/config:/config
      - ${DOCKER_ARR_POOL}:/pool

    networks:
      - default
    expose:
      - 8989

    labels:
      - traefik.enable=true

      # Public (shared)
      - traefik.http.routers.sonarr_arr_public_shared.service=sonarr_arr_public_shared
      - traefik.http.services.sonarr_arr_public_shared.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr_arr_public_shared.entryPoints=websecure
      - traefik.http.routers.sonarr_arr_public_shared.tls=true
      - traefik.http.routers.sonarr_arr_public_shared.middlewares=auth
      - traefik.http.routers.sonarr_arr_public_shared.rule=Host(`${SERVER_DOMAIN_PUBLIC}`) && PathPrefix(`/sonarr`)

      # # Public (shared) API
      - traefik.http.routers.sonarr-api_arr_public_shared.service=sonarr-api_arr_public_shared
      - traefik.http.services.sonarr-api_arr_public_shared.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr-api_arr_public_shared.entryPoints=websecure
      - traefik.http.routers.sonarr-api_arr_public_shared.tls=true
      - traefik.http.routers.sonarr-api_arr_public_shared.rule=Host(`${SERVER_DOMAIN_PUBLIC}`) && PathPrefix(`/sonarr/api`)
      - traefik.http.routers.sonarr-api_arr_public_shared.priority=9999

      # Public
      - traefik.http.routers.sonarr_arr_public.service=sonarr_arr_public
      - traefik.http.services.sonarr_arr_public.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr_arr_public.entryPoints=websecure
      - traefik.http.routers.sonarr_arr_public.tls=true
      - traefik.http.routers.sonarr_arr_internal.middlewares=auth
      - traefik.http.routers.sonarr_arr_public.rule=Host(`sonarr.${SERVER_DOMAIN_PUBLIC}`)

      # Internal
      - traefik.http.routers.sonarr_arr_internal.service=sonarr_arr_internal
      - traefik.http.services.sonarr_arr_internal.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr_arr_internal.entryPoints=websecure
      - traefik.http.routers.sonarr_arr_internal.tls=true
      - traefik.http.routers.sonarr_arr_internal.middlewares=auth, allow-private-cidr
      - traefik.http.routers.sonarr_arr_internal.rule=Host(`sonarr.${SERVER_DOMAIN_INTERNAL}`)

      # Localhost
      - traefik.http.routers.sonarr_arr_localhost.service=sonarr_arr_localhost
      - traefik.http.services.sonarr_arr_localhost.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr_arr_localhost.entrypoints=web
      - traefik.http.routers.sonarr_arr_localhost.middlewares=allow-localhost
      - traefik.http.routers.sonarr_arr_localhost.rule=Host(`sonarr.arr.docker.localhost`)

    restart: unless-stopped
